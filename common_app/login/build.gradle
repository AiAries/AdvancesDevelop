apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        applicationId "techown.login"
        versionCode 119
        versionName '6.1.1.9'
    }
    /**
     * Error:Execution failed for task ':mergeDebugResources'.
     > Error: Some file crunching failed, see logs for details
     */
    aaptOptions.cruncherEnabled false
    aaptOptions.useNewCruncher false
    signingConfigs {
        apply plugin: 'signing'

        release {
            storeFile file("techown.keystore")
            storePassword "123456"
            keyAlias "techownkey"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources false
            minifyEnabled false
            proguardFiles 'proguard-project.txt'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            applicationIdSuffix ".debug"
//            proguardFiles 'proguard-project.txt'
        }
    }
    //两个维度，一个环境env维度
    //         一个风控risk维度，在打包的时候是对这两个维度进行排列组合。
    //这样可以解决每个环境下都可以打出‘带风控’和‘不带风控’的包。
    //productFlavors这个配置不能放在app-framework：library里，否则引用不到library的所有类和资源文件
    flavorDimensions 'env'
    productFlavors {

        pro {
            dimension 'env'
            buildConfigField "boolean", "ENABLE_PRO_ENV", "false"
            buildConfigField "boolean", "ENABLE_CATCH_CRASHLOG", "true"
            manifestPlaceholders = [
                    GETUI_APP_ID    : "iLtcRTrZpB6pHmvBFRTUL2",
                    GETUI_APP_KEY   : "nTBayrol6MAtlKDzvnFsk1",
                    GETUI_APP_SECRET: "3Zvaaxt7H1Ad2eSTdlkyf2",
            ]

        }

        uat {
            dimension 'env'
            buildConfigField "boolean", "ENABLE_PRO_ENV", "false"
            buildConfigField "boolean", "ENABLE_CATCH_CRASHLOG", "true"
            manifestPlaceholders = [
                    GETUI_APP_ID    : "iLtcRTrZpB6pHmvBFRTUL2",
                    GETUI_APP_KEY   : "nTBayrol6MAtlKDzvnFsk1",
                    GETUI_APP_SECRET: "3Zvaaxt7H1Ad2eSTdlkyf2",
            ]

        }

    }
//    android.applicationVariants.all {
//        variant ->
//            variant.outputs.each {
//                output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        def buildType = variant.buildType.name
//                        def fileName =
//                                rootProject.name + "@" +
//                                        "${defaultConfig.versionName}-${defaultConfig.versionCode}-" +
//                                        "${buildType}.apk"
//                        output.outputFile = new File("E:/apk/2", fileName)
//                    }
//            }
//    }
}
repositories {
    flatDir {
        dirs 'libs'
    }

}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //带有资源文件的包，必须每个项目拥有自己的依赖，而不能通过依赖module的方式进行继承
//    compile(name: 'rxandroid-2.0.1', ext: 'aar')
//    compile(name: 'sqlbrite-2.0.0', ext: 'aar')
    compile project(':app_develop_kit')

}