apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        applicationId "cn.com.codequality"
        versionCode 11
        versionName "11.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }
    }
    signingConfigs {
        apply plugin: 'signing'

        release {
            storeFile file("codequality.jks")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources false
            minifyEnabled false
            //proguardFiles 'proguard-project.txt'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
//            applicationIdSuffix ".debug"
//            proguardFiles 'proguard-project.txt'
        }
    }
    flavorDimensions 'env'
    productFlavors {

        pro {
            dimension 'env'
            buildConfigField "boolean", "ENABLE_PRO_ENV", "false"
            buildConfigField "boolean", "ENABLE_CATCH_CRASHLOG", "true"
        }

        uat {
            dimension 'env'
            buildConfigField "boolean", "ENABLE_PRO_ENV", "false"
            buildConfigField "boolean", "ENABLE_CATCH_CRASHLOG", "true"
            applicationIdSuffix ".debug"

        }

    }
//    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
//    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleDynamicVersion
    api project(':app_develop_kit')
    // Dependencies for local unit tests
    api "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.ext.runnerVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"

}
